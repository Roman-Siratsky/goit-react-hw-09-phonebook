{"version":3,"sources":["redux/phoneBook/phoneBookActions.js","redux/phoneBook/phoneBookOperations.js","redux/phoneBook/phoneBookSelectors.js","components/ContactForm.jsx","components/Filter.jsx","components/Modal.jsx","components/EditContactForm.jsx","components/Contact.jsx","components/ContactList.jsx","components/Contacts.jsx","redux/authorization/authActions.js","redux/authorization/authOperations.js","components/UserMenu.jsx","redux/authorization/authSelectors.js","components/AuthMenu.jsx","components/Header.jsx","components/Register.jsx","components/Login.jsx","components/PublicRoute.jsx","components/PrivateRoute.jsx","components/Home.jsx","App.js","redux/phoneBook/phoneBookReducer.js","redux/authorization/authReducer.js","redux/store.js","index.js"],"names":["fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","editContactRequest","editContactSuccess","editContactError","changeFilter","axios","defaults","baseURL","fetchContacts","dispatch","actions","get","then","data","catch","error","getContacts","state","phoneBook","contacts","getFilter","filter","getVisibleContacts","createSelector","optimizedFilter","toLowerCase","name","includes","ContactForm","useDispatch","useSelector","useState","setName","number","setNumber","existingContact","optimizedContactName","some","getSomeOfName","className","TextField","label","variant","value","type","onChange","e","currentTarget","Button","color","disabled","length","Number","onClick","preventDefault","alert","contact","post","addContact","useStyles","makeStyles","theme","textField","width","padding","Filter","classes","placeholder","autoComplete","modalRef","document","getElementById","Modal","props","useEffect","window","addEventListener","onEscape","removeEventListener","code","toggleModal","createPortal","target","children","EditContactForm","id","credentials","contactId","patch","card","display","justifyContent","alignItems","paddingLeft","paddingRight","Contact","num","index","modal","setModal","currentId","setCurrentId","Card","CardMedia","CardContent","Typography","align","toUpperCase","split","map","digit","join","CardActions","delete","ContactList","shortId","generate","Contacts","registerRequest","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logOutRequest","logOutSuccess","logOutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","token","headers","common","Authorization","UserMenu","Toolbar","noWrap","userName","to","a","message","getIsAuthorized","authorization","isLoggedIn","getUserName","user","AuthMenu","appBar","flexDirection","Header","CssBaseline","AppBar","position","Register","email","setEmail","password","setPassword","Login","PublicRoute","Component","component","redirectTo","routeProps","render","restricted","PrivateRoute","Home","App","getState","persistedToken","exact","path","createReducer","action","payload","loading","combineReducers","initialUserState","_","__","authPersistConfig","key","storage","whitelist","rootReducer","phoneBookReducer","persistReducer","authReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","devTools","process","persistor","persistStore","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.fea4839a.chunk.js","sourcesContent":["// import * as types from './phoneBookTypes'\r\nimport shortId from 'shortid'\r\nimport { createAction } from '@reduxjs/toolkit'\r\n// import axios from 'axios'\r\nexport const fetchContactsRequest = createAction('phoneBook/fetchContactsRequest')\r\nexport const fetchContactsSuccess = createAction('phoneBook/fetchContactsSuccess')\r\nexport const fetchContactsError = createAction('phoneBook/fetchContactsError')\r\n\r\nexport const addContactRequest = createAction('phoneBook/addContactRequest')\r\nexport const addContactSuccess = createAction('phoneBook/addContactSuccess')\r\nexport const addContactError = createAction('phoneBook/addContactError')\r\n  \r\nexport const deleteContactRequest = createAction('phoneBook/deleteContactRequest')\r\nexport const deleteContactSuccess = createAction('phoneBook/deleteContactSuccess')\r\nexport const deleteContactError = createAction('phoneBook/deleteContactError')\r\n  \r\nexport const editContactRequest = createAction('phoneBook/editContactRequest')\r\nexport const editContactSuccess = createAction('phoneBook/editContactSuccess')\r\nexport const editContactError = createAction('phoneBook/editContactError')\r\n  \r\n\r\nexport const changeFilter = createAction('phoneBook/filter')\r\nexport const makeAlert = createAction('phoneBook/alert')\r\n\r\n","import axios from 'axios'\r\nimport * as actions from './phoneBookActions'\r\n// axios.defaults.baseURL = 'http://localhost:3000'\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com/'\r\n\r\nexport const fetchContacts = () => dispatch => {\r\n    dispatch(actions.fetchContactsRequest())\r\n    axios.get('/contacts')\r\n        .then(({ data }) => dispatch(actions.fetchContactsSuccess(data)))\r\n    .catch(error => dispatch(actions.fetchContactsError(error)))\r\n}\r\nexport const addContact = (name, number) => dispatch => {\r\n    const contact = { name, number }\r\n    \r\n    dispatch(actions.addContactRequest())\r\n    axios.post('/contacts', contact)\r\n        .then(({ data }) => dispatch(actions.addContactSuccess(data)))\r\n        .catch(error => dispatch(actions.addContactError(error)))\r\n}\r\n\r\nexport const deleteContact = id => dispatch => {\r\n    dispatch(actions.deleteContactRequest())\r\n     axios.delete('/contacts/' + id)\r\n        .then(() => dispatch(actions.deleteContactSuccess(id)))\r\n        .catch(error => dispatch(actions.deleteContactError(error)))\r\n}\r\nexport const editContact = (id, credentials) => dispatch => {\r\n    dispatch(actions.editContactRequest())\r\n     axios.patch('/contacts/' + id, credentials)\r\n        .then(() => dispatch(actions.editContactSuccess(id, credentials)))\r\n        .catch(error => dispatch(actions.editContactError(error)))\r\n}","import {createSelector} from '@reduxjs/toolkit'\r\n\r\nexport const getContacts = state => state.phoneBook.contacts\r\n\r\nexport const getFilter = state => state.phoneBook.filter\r\n\r\nexport const getVisibleContacts = createSelector([getContacts, getFilter], (contacts, filter) => {\r\n    const optimizedFilter = filter.toLowerCase();\r\n    return contacts.filter(({ name }) => name.toLowerCase().includes(optimizedFilter));\r\n})\r\n// export const getVisibleContacts = state => {\r\n//     const contacts = getContacts(state)\r\n//     const filter = getFilter(state)\r\n//     const optimizedFilter = filter.toLowerCase()\r\n//     return contacts.filter(({name}) => name.toLowerCase().includes(optimizedFilter))\r\n// }\r\n\r\n\r\n\r\n","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addContact } from '../redux/phoneBook/phoneBookOperations'\r\nimport { getContacts } from '../redux/phoneBook/phoneBookSelectors'\r\nimport { TextField, Button } from '@material-ui/core'\r\n\r\n\r\nexport default function ContactForm() {\r\n    const dispatch = useDispatch()\r\n    const contacts = useSelector(getContacts)\r\n    const [name, setName] = useState('')\r\n    const [number, setNumber] = useState('+38')\r\n\r\n    const handleNameChange = e => {\r\n        setName(e.currentTarget.value)\r\n    }\r\n    const handleNumberChange = e => {\r\n        setNumber(e.currentTarget.value)\r\n    }\r\n    const onExistingContactAlert = e => {\r\n        e.preventDefault()\r\n        setName('')\r\n        setNumber('')\r\n        alert(name + ' уже есть в списке контактов')\r\n    }\r\n    const getSomeOfName = (name) => {\r\n        const optimizedContactName = name.toLowerCase();\r\n        return contacts.some(({name}) => name.toLowerCase() === optimizedContactName)\r\n     }\r\n     \r\n     const existingContact = getSomeOfName(name)\r\n     \r\n    return (\r\n        <form className='main-form'>\r\n            <div>\r\n                <TextField\r\n                    name='name'\r\n                    label=\"Name\"\r\n                    variant=\"outlined\"\r\n                    value={name}\r\n                    type='text'\r\n                    onChange={handleNameChange}\r\n                />\r\n            </div>\r\n            <div>\r\n                <TextField\r\n                    label=\"Number\"\r\n                    name='number'\r\n                    variant=\"outlined\"\r\n                    type='tel'\r\n                    value={number}\r\n                    onChange={handleNumberChange}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type='submit'\r\n                    disabled={(name.length && number.length === 13 && Number(number)) \r\n                        ? false\r\n                        : true\r\n                    }\r\n                        onClick={existingContact\r\n                            ? onExistingContactAlert \r\n                            : (e) => {\r\n                                e.preventDefault()\r\n                                dispatch(addContact(name, number))\r\n                                setName('')\r\n                                setNumber('')\r\n                    }}\r\n                >\r\n                Создать\r\n                </Button>\r\n            </div>\r\n            </form>\r\n    )\r\n}\r\n","import { TextField } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { useDispatch, useSelector} from 'react-redux'\r\nimport { changeFilter } from '../redux/phoneBook/phoneBookActions'\r\nimport { getFilter } from '../redux/phoneBook/phoneBookSelectors'\r\nimport { makeStyles } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  textField: {\r\n    width: '100%',\r\n    padding: '5px'\r\n  }\r\n}))\r\n\r\nconst Filter = () => {\r\n  const value = useSelector(getFilter)\r\n  const dispatch = useDispatch()\r\n  const classes = useStyles()\r\n  return (\r\n    <TextField\r\n      className={classes.textField}\r\n      name='filter'\r\n      type='text'\r\n      placeholder='Search contacts'\r\n      value={value}\r\n      variant=\"outlined\"\r\n      autoComplete='off'\r\n      onChange={(e) => dispatch(changeFilter(e.currentTarget.value))}\r\n      />\r\n    )\r\n}\r\nexport default Filter;\r\n\r\n","import React, {  useEffect } from 'react'\r\nimport {createPortal} from 'react-dom'\r\nconst modalRef = document.getElementById('modal')\r\n\r\n\r\nconst Modal = (props) => {\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('keydown', onEscape)\r\n        return function cleanUp() {\r\n            window.removeEventListener('keydown', onEscape)\r\n        }\r\n    }, [])\r\n\r\n    const onEscape = (e) => {\r\n            if (e.code === 'Escape') {\r\n                props.toggleModal()\r\n            }\r\n    }\r\n\r\n    const onOverlayClick = (e) => {\r\n        if (e.currentTarget === e.target) {\r\n            props.toggleModal()\r\n        }\r\n    }\r\n\r\n    return createPortal(<div onClick={onOverlayClick} className='overlay'>\r\n            <div className='modal'>\r\n                {props.children}\r\n            </div>\r\n        </div>, modalRef)\r\n}\r\nexport default Modal;","import React, { useState } from 'react'\r\nimport {useDispatch, useSelector } from 'react-redux'\r\nimport { editContact, fetchContacts } from '../redux/phoneBook/phoneBookOperations'\r\nimport { getContacts } from '../redux/phoneBook/phoneBookSelectors'\r\nimport { TextField, Button } from '@material-ui/core'\r\n\r\nconst EditContactForm = (props) => {\r\n    \r\n    const dispatch = useDispatch()\r\n    const contacts = useSelector(getContacts)\r\n    const [name, setName] = useState('')\r\n    const [number, setNumber] = useState('+38')\r\n\r\n    const handleNameChange = e => {\r\n        setName(e.currentTarget.value)\r\n    }\r\n    const handleNumberChange = e => {\r\n        setNumber(e.currentTarget.value)\r\n    }\r\n    const onExistingContactAlert = e => {\r\n        e.preventDefault()\r\n        setName('')\r\n        setNumber('')\r\n        alert(name + ' уже есть в списке контактов')\r\n    }\r\n    const getSomeOfName = (name) => {\r\n        const optimizedContactName = name.toLowerCase();\r\n        return contacts.some(({name}) => name.toLowerCase() === optimizedContactName)\r\n     }\r\n \r\n    return (\r\n        <form className='edit-form'>\r\n            <div>\r\n                <TextField\r\n                    name='name'\r\n                    label=\"Name\"\r\n                    variant=\"outlined\"\r\n                    value={name}\r\n                    type='text'\r\n                    onChange={handleNameChange}\r\n                />\r\n            </div>\r\n            <div>\r\n                <TextField\r\n                    label=\"Number\"\r\n                    name='number'\r\n                    variant=\"outlined\"\r\n                    type='tel'\r\n                    value={number}\r\n                    onChange={handleNumberChange}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type='submit'\r\n                    disabled={(name.length && number.length === 13 && Number(number)) \r\n                        ? false\r\n                        : true\r\n                    }\r\n                        onClick={getSomeOfName(name)\r\n                            ? onExistingContactAlert \r\n                            : (e) => {\r\n                                e.preventDefault()\r\n                                dispatch(editContact(props.contactId,{name, number}))\r\n                                // editContact(props.contactId, { name, number})\r\n                                setName('')\r\n                                setNumber('')\r\n                                props.toggleModal()\r\n                                dispatch(fetchContacts())\r\n                    }}\r\n                >\r\n                Изменить\r\n                </Button>\r\n            </div>\r\n            </form>\r\n        )\r\n    // }\r\n}\r\nexport default EditContactForm;\r\n","import React, { useState } from 'react';\r\nimport {useDispatch} from 'react-redux'\r\nimport { Button, Card, CardActions, CardContent, CardMedia, makeStyles, Typography } from '@material-ui/core';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport Modal from './Modal'\r\nimport { deleteContact } from '../redux/phoneBook/phoneBookOperations';\r\nimport EditContactForm from './EditContactForm'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    paddingLeft: '10px',\r\n    paddingRight: '10px'\r\n  }\r\n}))\r\n\r\nconst Contact = ({ contact, index }) => {\r\n  const dispatch = useDispatch()\r\n  const classes = useStyles()\r\n  const [modal, setModal] = useState(false)\r\n  const [currentId, setCurrentId] = useState(null)\r\n\r\n  const toggleModal = (id) => {\r\n    setModal(!modal)\r\n    setCurrentId(id)\r\n  }\r\n  \r\n  const getTelephoneForm = (num) => {\r\n    const numArray = num.split('')\r\n    return numArray.map((digit, index) => {\r\n      if (index === 3) return `(${digit}`\r\n      if (index === 6) return `)${digit}`\r\n      return digit\r\n    }).join('')\r\n  }\r\n  return (\r\n          <li className='contact-item' key={contact.id}>\r\n        <Card className={classes.card}>\r\n          <CardMedia>\r\n            <PhoneIcon/>\r\n          </CardMedia>\r\n        <CardContent>\r\n          <Typography align='center' variant='h6'>{contact.name.toUpperCase() + \" : \" + getTelephoneForm(contact.number)}\r\n          </Typography>\r\n        </CardContent>\r\n          <CardActions>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type='button'\r\n              onClick={() => dispatch(deleteContact(contact.id))}\r\n            >\r\n            Delete\r\n            </Button>\r\n          <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            type='button'\r\n            onClick={() => toggleModal(contact.id)}\r\n            >\r\n            Edit\r\n            </Button>\r\n          {modal && <Modal toggleModal={toggleModal}>\r\n            <EditContactForm toggleModal={toggleModal} contactId={currentId}/>\r\n          </Modal>}\r\n          </CardActions>\r\n            </Card>\r\n          </li>\r\n  )\r\n}\r\nexport default Contact","import React, { useEffect } from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { fetchContacts } from '../redux/phoneBook/phoneBookOperations';\r\nimport shortId from 'shortid'\r\nimport {getVisibleContacts} from '../redux/phoneBook/phoneBookSelectors'\r\nimport { Typography } from '@material-ui/core';\r\nimport Contact from './Contact'\r\n\r\n\r\n\r\nexport default function ContactList() {\r\n  const dispatch = useDispatch()\r\n  const contacts = useSelector(getVisibleContacts)\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts())\r\n  }, [dispatch])\r\n\r\n      return (\r\n          contacts.length\r\n          ? contacts.map((contact, index) => {\r\n            return (\r\n              <Contact\r\n                key={contact.id}\r\n                contact={contact}\r\n                index={index}\r\n              />\r\n            )\r\n          })\r\n          : <li className='no_contacts' key={shortId.generate()}>\r\n              <Typography align='center' variant='h3'>No saved contacts yet</Typography>\r\n            </li>\r\n    )\r\n}\r\n\r\n\r\n","import ContactForm from './ContactForm'\r\nimport Filter from './Filter'\r\nimport ContactList from './ContactList'\r\nimport {Typography} from '@material-ui/core'\r\n\r\nconst Contacts = () => {\r\n  return (\r\n    <div className='container'>\r\n        <div><ContactForm /></div>\r\n          <div className='contacts'>\r\n            <Typography align='center' variant='h6'>Contacts</Typography>\r\n            <Filter/>\r\n          <ul>\r\n            <ContactList/>\r\n         </ul>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Contacts;","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\n\r\nexport const registerRequest = createAction('auth/registerRequest')\r\nexport const registerSuccess = createAction('auth/registerSuccess')\r\nexport const registerError = createAction('auth/registerError')\r\n\r\nexport const loginRequest = createAction('auth/loginRequest')\r\nexport const loginSuccess = createAction('auth/loginSuccess')\r\nexport const loginError = createAction('auth/loginError')\r\n\r\nexport const logOutRequest = createAction('auth/logOutRequest')\r\nexport const logOutSuccess = createAction('auth/logOutSuccess')\r\nexport const logOutError = createAction('auth/logOutError')\r\n\r\nexport const getCurrentUserRequest = createAction('auth/getCurrentUserRequest')\r\nexport const getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess')\r\nexport const getCurrentUserError = createAction('auth/getCurrentUserError')\r\n","import {\r\n    registerRequest, registerSuccess,\r\n    registerError, loginRequest,\r\n    loginSuccess, loginError,\r\n    getCurrentUserRequest, getCurrentUserSuccess,\r\n    getCurrentUserError, logOutRequest,\r\n    logOutSuccess, logOutError\r\n} from './authActions'\r\nimport axios from 'axios'\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com/'\r\n\r\nconst token = {\r\n    setToken(token) {\r\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`\r\n    },\r\n    unSetToken() {\r\n        axios.defaults.headers.common.Authorization = ``\r\n    }\r\n}\r\n\r\nexport const register = credentials => async dispatch => {\r\n    dispatch(registerRequest())\r\n    try {\r\n        const { data } = await axios.post('users/signup', credentials)\r\n        token.setToken(data.token)\r\n        dispatch(registerSuccess(data))\r\n    } catch(error) {\r\n        dispatch(registerError(error.message))\r\n    }\r\n}\r\nexport const login = credentials => async dispatch => {\r\n    dispatch(loginRequest())\r\n    try {\r\n        const { data } = await axios.post('users/login', credentials)\r\n        token.setToken(data.token)\r\n        dispatch(loginSuccess(data))\r\n    } catch(error) {\r\n        dispatch(loginError(error.message))\r\n    }  \r\n}\r\nexport const logOut = () => async dispatch => {\r\n    dispatch(logOutRequest())\r\n    try {\r\n        await axios.post('users/logout')\r\n        token.unSetToken()\r\n        dispatch(logOutSuccess())\r\n    } catch(error) {\r\n        dispatch(logOutError(error.message))\r\n    }  \r\n}\r\nexport const getCurrentUser = () => async (dispatch, getState) => {\r\n    const {\r\n        authorization: {token: persistedToken},\r\n    } = getState()\r\n\r\n    if (!persistedToken) {\r\n        return\r\n    }\r\n    token.setToken(persistedToken)\r\n    dispatch(getCurrentUserRequest())\r\n    try {\r\n        const { data } = await axios.get('users/current')\r\n        dispatch(getCurrentUserSuccess(data))\r\n    } catch(error) {\r\n        dispatch(getCurrentUserError(error.message))\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Toolbar, Typography, Button } from '@material-ui/core'\r\nimport { logOut } from '../redux/authorization/authOperations'\r\nimport { useDispatch } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst UserMenu = (props) => {\r\n  const dispatch = useDispatch()\r\n  return (\r\n    <Toolbar>\r\n              <Typography\r\n                variant=\"h6\"\r\n                color=\"inherit\"\r\n                noWrap>\r\n              Welcome, {props.userName}\r\n            </Typography>\r\n            <NavLink className='navLink' to='/login'>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n          noWrap\r\n          type='button'\r\n                onClick={() => dispatch(logOut())}\r\n              >\r\n              Logout\r\n            </Button>\r\n            </NavLink>\r\n    </Toolbar>\r\n  )\r\n}\r\nexport default UserMenu","export const getIsAuthorized = (state) => state.authorization.isLoggedIn\r\nexport const getUserName = (state) => state.authorization.user.name","import { Toolbar, Typography } from '@material-ui/core'\r\nimport { NavLink } from 'react-router-dom'\r\nconst AuthMenu = () => {\r\n  return (\r\n    <Toolbar>\r\n            <NavLink className='navLink' to='/register'>\r\n              <Typography\r\n                variant=\"h6\"\r\n                color=\"inherit\"\r\n                noWrap>\r\n              Register\r\n            </Typography>\r\n            </NavLink>\r\n            <NavLink className='navLink' to='/login'>\r\n              <Typography\r\n                variant=\"h6\"\r\n                color=\"inherit\"\r\n                noWrap>\r\n              Login\r\n            </Typography>\r\n            </NavLink>\r\n    </Toolbar>\r\n  )\r\n}\r\n\r\nexport default AuthMenu","import React from 'react'\r\nimport { CssBaseline, AppBar, Toolbar, Typography} from '@material-ui/core'\r\nimport ContactsIcon from '@material-ui/icons/Contacts';\r\nimport { NavLink } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { useSelector } from 'react-redux';\r\nimport UserMenu from './UserMenu'\r\nimport {getIsAuthorized, getUserName} from '../redux/authorization/authSelectors'\r\nimport AuthMenu from './AuthMenu'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    flexDirection: 'row'\r\n  }\r\n}))\r\n\r\n\r\nconst Header = () => {\r\n  const isLoggedIn = useSelector(getIsAuthorized)\r\n  const userName = useSelector(getUserName)\r\n  const classes = useStyles()\r\n    return (\r\n        <>\r\n        <CssBaseline />\r\n        <AppBar className={classes.appBar} position=\"relative\"> \r\n          <Toolbar>\r\n            <ContactsIcon />\r\n            <NavLink className='navLink' to='/'>\r\n              <Typography\r\n                variant=\"h6\"\r\n                color=\"inherit\"\r\n                noWrap>\r\n              Home\r\n            </Typography>\r\n            </NavLink>\r\n            {isLoggedIn && <NavLink className='navLink' to='/contacts'>\r\n              <Typography\r\n                variant=\"h6\"\r\n                color=\"inherit\"\r\n                noWrap>\r\n              PhoneBook\r\n            </Typography>\r\n            </NavLink>}\r\n          </Toolbar>\r\n          {isLoggedIn ? <UserMenu userName={userName}/> : <AuthMenu/>}\r\n          </AppBar>\r\n        </>\r\n    )\r\n}\r\nexport default Header\r\n// const mapStateToProps = (state) => ({\r\n//   isLoggedIn: getIsAuthorized(state),\r\n//   userName: getUserName(state)\r\n// })\r\n// export default connect(mapStateToProps)(Header)","import React, { useState } from 'react'\r\nimport {TextField, Button} from '@material-ui/core'\r\nimport { useDispatch } from 'react-redux'\r\nimport {register} from '../redux/authorization/authOperations' \r\n//ProezdPoMostu\r\n//Proezd1010\r\nconst Register = (props) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const handleNameChange = (e) => {\r\n        const { value } = e.currentTarget;\r\n        setName(value)\r\n    }\r\n    const handleEmailChange = (e) => {\r\n        const { value } = e.currentTarget;\r\n        setEmail(value)\r\n    }\r\n    const handlePasswordChange = (e) => {\r\n        const { value } = e.currentTarget;\r\n        setPassword(value)\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        dispatch(register({name, email, password}))\r\n        setName('')\r\n        setEmail('')\r\n        setPassword('')\r\n    }\r\n    return (\r\n      <div className='register-container'>\r\n          <form className='register-form'>\r\n            <div className='register-item'>\r\n                <TextField\r\n                    name='name'\r\n                    label=\"Name\"\r\n                    variant=\"outlined\"\r\n                    value={name}\r\n                    type='text'\r\n                    onChange={handleNameChange}\r\n                />\r\n            </div>\r\n            <div className='register-item'>\r\n                <TextField\r\n                    label=\"Email\"\r\n                    name='email'\r\n                    variant=\"outlined\"\r\n                    type='email'\r\n                    value={email}\r\n                        onChange={handleEmailChange}\r\n                        autoComplete='off'\r\n                />\r\n          </div>\r\n          <div className='register-item'>\r\n                <TextField\r\n                    label=\"Password\"\r\n                    name='password'\r\n                    variant=\"outlined\"\r\n                    type='password'\r\n                    value={password}\r\n                        onChange={handlePasswordChange}\r\n                        autoComplete='off'\r\n                />\r\n            </div>\r\n            <div className='register-item'>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                        type='submit'\r\n                        onClick={handleSubmit}\r\n                >\r\n                Зарегистрироваться\r\n                </Button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n  )\r\n}\r\nexport default Register","import React, { useState } from 'react'\r\nimport { TextField, Button } from '@material-ui/core'\r\nimport {login} from '../redux/authorization/authOperations'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst Login = (props) => {\r\n    const dispatch = useDispatch()\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const handleEmailChange = (e) => {\r\n        const { value } = e.currentTarget;\r\n        setEmail(value)\r\n    }\r\n    const handlePasswordChange = (e) => {\r\n        const { value } = e.currentTarget;\r\n        setPassword(value)\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login({email, password}))\r\n        setEmail('')\r\n        setPassword('')\r\n    }\r\n    return (\r\n      <div className='register-container'>\r\n          <form className='register-form'>\r\n            <div className='register-item'>\r\n                <TextField\r\n                    label=\"Email\"\r\n                    name='email'\r\n                    variant=\"outlined\"\r\n                    type='email'\r\n                    value={email}\r\n                    onChange={handleEmailChange}\r\n                />\r\n          </div>\r\n          <div className='register-item'>\r\n                <TextField\r\n                    label=\"Password\"\r\n                    name='password'\r\n                    variant=\"outlined\"\r\n                    type='password'\r\n                    value={password}\r\n                    onChange={handlePasswordChange}\r\n                />\r\n            </div>\r\n            <div className='register-item'>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                        type='submit'\r\n                        onClick={handleSubmit}\r\n                >\r\n                Войти\r\n                </Button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n  )\r\n}\r\nexport default Login","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport {Route, Redirect} from 'react-router-dom'\r\nimport {getIsAuthorized} from '../redux/authorization/authSelectors'\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => {\r\n  const isLoggedIn = useSelector(getIsAuthorized)\r\n  return (\r\n  <Route\r\n    {...routeProps}\r\n    render={props => \r\n      isLoggedIn && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n          <Component {...props}/>\r\n      )\r\n    }\r\n  />\r\n)}\r\nexport default PublicRoute;","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport {Route, Redirect} from 'react-router-dom'\r\nimport {getIsAuthorized} from '../redux/authorization/authSelectors'\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => {\r\n  const isLoggedIn = useSelector(getIsAuthorized)\r\n  return (\r\n  <Route\r\n    {...routeProps}\r\n    render={props => \r\n      isLoggedIn ? <Component {...props}/> : <Redirect to={redirectTo}/>\r\n    }\r\n  />\r\n)\r\n}\r\nexport default PrivateRoute","import React from 'react'\r\nimport { Typography } from '@material-ui/core'\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className='home-container'>\r\n      <Typography align='center' variant='h1'>Contacts Servise</Typography>\r\n    </div>\r\n    \r\n  )\r\n}\r\nexport default Home;","import React, {useEffect} from 'react'\nimport { Component } from 'react';\nimport Contacts from './components/Contacts'\nimport './sass/main.scss'\nimport Header from './components/Header'\nimport { Switch } from 'react-router';\nimport Register from './components/Register'\nimport Login from './components/Login'\nimport {getCurrentUser} from './redux/authorization/authOperations'\nimport { useDispatch } from 'react-redux';\nimport PublicRoute from './components/PublicRoute'\nimport PrivateRoute from './components/PrivateRoute'\nimport Home from './components/Home'\n\n\nconst App = () => {\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(getCurrentUser())\n  }, [])\n\n  return (\n    <>\n        <Header />\n        <div className='whole_app'>\n          <Switch>\n          <PublicRoute\n            exact path='/'\n            component={Home}\n          />\n          <PrivateRoute\n            path='/contacts'\n            component={Contacts}\n            redirectTo='/login'\n          />\n          <PublicRoute\n            path='/register'\n            component={Register}\n            restricted redirectTo='/contacts'\n          />\n          <PublicRoute\n            path='/login'\n            component={Login}\n            restricted\n            redirectTo='contacts'\n          />\n        </Switch>\n        </div>\n      </>\n  )\n}\nexport default App;\n\n\n// const mapDispatchToProps = (dispatch) => ({\n//   onGetCurrentUser: () => dispatch(getCurrentUser())\n// })\n// export default connect(null, mapDispatchToProps)(App);\n","import {combineReducers} from 'redux'\r\nimport {createReducer} from '@reduxjs/toolkit'\r\nimport * as actions from './phoneBookActions'\r\n\r\n\r\nconst contacts = createReducer([], {\r\n    [actions.fetchContactsSuccess]: (state, action) => action.payload,\r\n    [actions.addContactSuccess]: (state, action) => [...state, action.payload],\r\n    [actions.deleteContactSuccess]: (state, action) => state.filter(contact => contact.id !== action.payload),\r\n})\r\n\r\nconst filter = createReducer('', {\r\n    [actions.changeFilter]: (state, action) => action.payload\r\n})\r\n\r\nconst loading = createReducer(false, {\r\n    [actions.addContactRequest]: () => true,\r\n    [actions.addContactSuccess]: () => false,\r\n    [actions.addContactError]: () => false,\r\n    [actions.deleteContactRequest]: () => true,\r\n    [actions.deleteContactSuccess]: () => false,\r\n    [actions.deleteContactError]: () => false,\r\n})\r\nexport default combineReducers({\r\n    contacts,\r\n    filter,\r\n    loading,\r\n})\r\n","import { combineReducers, createReducer } from '@reduxjs/toolkit'\r\nimport {\r\n    registerRequest, registerSuccess,\r\n    registerError, loginRequest,\r\n    loginSuccess, loginError,\r\n    getCurrentUserRequest, getCurrentUserSuccess, getCurrentUserError,\r\n    logOutRequest,\r\n    logOutSuccess, logOutError\r\n} from './authActions'\r\n\r\nconst initialUserState = { name: null, email: null }\r\n\r\nconst user = createReducer(initialUserState, {\r\n    [registerSuccess]: (_, { payload }) => payload.user,\r\n    [loginSuccess]: (_, { payload }) => payload.user,\r\n    [logOutSuccess]: () => initialUserState,\r\n    [getCurrentUserSuccess]: (_, {payload}) => payload,\r\n})\r\n\r\nconst token = createReducer(null, {\r\n    [registerSuccess]: (_, { payload }) => payload.token,\r\n    [loginSuccess]: (_, { payload }) => payload.token,\r\n    [logOutSuccess]: (_, __) => null,\r\n})\r\nconst error = createReducer(null, {\r\n    [registerError]: (_, action) => action.payload,\r\n    [loginError]: (_, action) => action.payload,\r\n    [logOutError]: (_, { payload }) => payload,\r\n    [getCurrentUserError]: (_, {payload}) => payload\r\n})\r\nconst isLoggedIn = createReducer(false, {\r\n    [registerSuccess]: () => true,\r\n    [loginSuccess]: () => true,\r\n    [getCurrentUserSuccess]: () => true,\r\n    [logOutSuccess]: () => false,\r\n})\r\n\r\nexport default combineReducers({\r\n    user,\r\n    token,\r\n    isLoggedIn,\r\n    error\r\n})","import {configureStore, getDefaultMiddleware, combineReducers} from '@reduxjs/toolkit'\r\nimport phoneBookReducer from './phoneBook/phoneBookReducer'\r\nimport logger from 'redux-logger'\r\nimport authReducer from './authorization/authReducer'\r\nimport storage from 'redux-persist/lib/storage' \r\nimport \r\n{\r\n    persistReducer,\r\n    persistStore,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER\r\n}from 'redux-persist'\r\n\r\n\r\nconst authPersistConfig = {\r\n    key: 'token',\r\n    storage,\r\n    whitelist: ['token']\r\n}\r\nconst rootReducer = combineReducers({\r\n    phoneBook: phoneBookReducer,\r\n    authorization: persistReducer(authPersistConfig, authReducer)\r\n})\r\n\r\nconst middleware = [\r\n    ...getDefaultMiddleware({\r\n        serializableCheck: {\r\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\r\n        },\r\n    }),\r\n    logger,\r\n    ]\r\n\r\nconst store = configureStore({\r\n    reducer: rootReducer,\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n})\r\n\r\nconst persistor = persistStore(store)\r\n \r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {store, persistor}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport store from './redux/store'\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={'Loading'} persistor={store.persistor}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}